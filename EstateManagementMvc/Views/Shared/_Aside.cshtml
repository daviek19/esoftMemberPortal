    <!-- Left panel : Navigation area -->
<!-- Note: This width of the aside area can be adjusted through LESS variables -->
<aside id="left-panel">

    <!-- User info -->
    @{ Html.RenderPartial("_CurrentUser"); }
    <!-- end user info -->
    <!-- NAVIGATION : This navigation is also responsive

    To make this navigation dynamic please make sure to link the node
    (the reference to the nav > ul) after page load. Or the navigation
    will not initialize.
    -->

    <nav>
        <ul>
            @{
                @*@Parent*@
                var menus =EstateManagementMvc.Services.Common.UserSession.Current.UserMenuIds;
                menus = menus.Where(x => x.Report == false).ToList();
                //menus = menus.Where(x => x.MenuId == 50000 || x.MenuId == 50010 || x.MenuId == 50012 || x.MenuId == 50121 || x.MenuId == 50122 || x.MenuId == 50123).OrderBy(x => x.ParentId).OrderBy(x => x.MenuId).ToList();
                if (menus == null) { return; }
                foreach (var menuitem in menus.Where(x => x.ParentId == -1))
                {
                    <li class="@Html.RouteIf(@menuitem.Area,@menuitem.Controller,@menuitem.Action, "active")">
                        <a href="#" title="@menuitem.MenuName"><i class="@menuitem.Icon"></i> <span class="menu-item-parent">@menuitem.MenuName</span></a>
                        <ul>
                            @*First Child*@
                            @{
                    var childNav = menus.Where(m => m.ParentId == @menuitem.MenuId).ToList();

                    if (childNav != null && childNav.Count() > 0)
                    {
                        foreach (var items in childNav)
                        {
                            if (items.Action != "#" && items.Action != "")
                            {
                                <li class="@Html.RouteIf(@items.Area, @items.Controller, @items.Action, "active")">
                                    <a href="@Url.Action(@items.Action, @items.Controller,
                                        new { area = @items.Area })">
                                        <span>@items.MenuName</span>
                                    </a>
                                </li>
                                continue;
                            }
                            <li class="@Html.RouteIf(@items.Area, @items.Controller, @items.Action, "active")">
                                <a href="#" title="@items.MenuName">
                                    <i class="@items.Icon"></i> <span>@items.MenuName</span>
                                </a>
                                <ul>
                                    @*Child Menu Items*@
                                    @{
                            var innerChild = menus.Where(m => m.ParentId == @items.MenuId).ToList();
                            if (innerChild != null && innerChild.Count() > 0)
                            {
                                foreach (var innerChildItem in innerChild)
                                {
                                    if (items.Action != "#" && items.Action != "")
                                    {
                                        <li class="@Html.RouteIf(@items.Area, @items.Controller, @items.Action, "active")">
                                            <a href="@Url.Action(@items.Action, @items.Controller,
                                        new { area = @items.Area })">
                                                <span>@items.MenuName</span>
                                            </a>
                                        </li>
                                        continue;
                                    }
                                    var route = @innerChildItem.Area + "/" + @innerChildItem.Controller + "/" + @innerChildItem.Action;

                                    <li class="@Html.RouteIf(@innerChildItem.Area, @innerChildItem.Controller, @innerChildItem.Action, "active")">
                                        @if (innerChildItem.Action != "#" && innerChildItem.Action != "")
                                        {
                                            <a href="@Url.Action(@innerChildItem.Action, @innerChildItem.Controller,
                                            new { area = @innerChildItem.Area })">
                                                <i class="@innerChildItem.Icon"></i>
                                                <span>@innerChildItem.MenuName </span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="#" title="@innerChildItem.MenuName">
                                                <i class="@innerChildItem.Icon"></i> <span>@innerChildItem.MenuName</span>
                                            </a>
                                        }

                                        @{
                                        var innerThirdChild = menus.Where(m => m.ParentId == @innerChildItem.MenuId).ToList();
                                        if (innerThirdChild != null && innerThirdChild.Count() > 0)
                                        {
                                            <ul>
                                                @{
                                            foreach (var innerThirdItem in innerThirdChild)
                                            {
                                                var thirdRoute = @innerThirdItem.Area + "/" + @innerThirdItem.Controller + "/" + @innerThirdItem.Action;

                                                <li class="@Html.RouteIf(@innerThirdItem.Area, @innerThirdItem.Controller, @innerThirdItem.Action, "active")">
                                                    <a href="@Url.Action(@innerThirdItem.Action, @innerThirdItem.Controller,
                                            new { area = @innerThirdItem.Area })">
                                                        <i class="@innerThirdItem.Icon"></i>
                                                        <span>@innerThirdItem.MenuName </span>
                                                    </a>
                                                </li>

                                            }
                                                }
                                            </ul>
                                        }
                                        }


                                    </li>

                                }
                            }
                                    }
                                    @*Eof Child Menu Items*@
                                </ul>
                            </li>
                        }
                    }
                            }

                        </ul>

                    </li>
                }
            }

        </ul>
    </nav>



    <span class="minifyme" data-action="minifyMenu">
        <i class="fa fa-arrow-circle-left hit"></i>
    </span>

</aside>
<!-- END NAVIGATION -->