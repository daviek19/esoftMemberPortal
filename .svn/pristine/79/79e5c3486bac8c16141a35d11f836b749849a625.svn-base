<!--================================================== -->
<!-- PACE LOADER - turn this on if you want ajax loading to show (caution: uses lots of memory on iDevices)-->
<!--<script data-pace-options='{ "restartOnRequestAfter": true }' src="~/js/plugin/pace/pace.min.js"></script>-->
<!-- Link to Google CDN's jQuery + jQueryUI; fall back to local -->
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script>
    if (!window.jQuery.ui) {
        document.write('<script src="/Scripts/libs/jquery-ui-1.10.3.min.js"><\/script>');
    }
</script>

<!--KendoUI Scripts-->
<script src="~/Scripts/kendo/2014.2.716/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/2014.2.716/kendo.aspnetmvc.min.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js") "></script>

<!--End Scripts-->
<!-- IMPORTANT: APP CONFIG -->
<script src="~/js/app.config.js"></script>

<!-- JS TOUCH : include this plugin for mobile drag / drop touch events-->
<script src="~/js/plugin/jquery-touch/jquery.ui.touch-punch.min.js"></script>

<!-- BOOTSTRAP JS -->
<script src="~/js/bootstrap/bootstrap.min.js"></script>

<!-- CUSTOM NOTIFICATION -->
<script src="~/js/notification/SmartNotification.min.js"></script>

<!-- JARVIS WIDGETS -->
<script src="~/js/smartwidgets/jarvis.widget.min.js"></script>

<!-- EASY PIE CHARTS -->
<script src="~/js/plugin/easy-pie-chart/jquery.easy-pie-chart.min.js"></script>

<!-- SPARKLINES -->
<script src="~/js/plugin/sparkline/jquery.sparkline.min.js"></script>

<!-- JQUERY VALIDATE -->
<script src="~/js/plugin/jquery-validate/jquery.validate.min.js"></script>

<!-- JQUERY MASKED INPUT -->
<script src="~/js/plugin/masked-input/jquery.maskedinput.min.js"></script>

<!--DATE-JS-->
<script src="~/js/date-js/date.js"></script>

<!-- JQUERY SELECT2 INPUT -->
<script src="~/js/plugin/select2/select2.min.js"></script>

<!-- JQUERY UI + Bootstrap Slider -->
<script src="~/js/plugin/bootstrap-slider/bootstrap-slider.min.js"></script>

<!-- browser msie issue fix -->
<script src="~/js/plugin/msie-fix/jquery.mb.browser.min.js"></script>

<!-- FastClick: For mobile devices -->
<script src="~/js/plugin/fastclick/fastclick.min.js"></script>

<!--[if IE 8]>



<h1>Your browser is out of date, please update your browser by going to www.microsoft.com/download</h1>

<![endif]-->
<!-- Demo purpose only -->
<script src="~/js/demo.min.js"></script>

<!-- MAIN APP JS FILE -->
<script src="~/js/app.min.js"></script>

<!-- ENHANCEMENT PLUGINS : NOT A REQUIREMENT -->
<!-- Voice command : plugin -->
<script src="~/js/speech/voicecommand.min.js"></script>

<!-- SmartChat UI : plugin -->
<script src="~/js/smart-chat-ui/smart.chat.ui.min.js"></script>
<script src="~/js/smart-chat-ui/smart.chat.manager.min.js"></script>

<!-- PAGE RELATED PLUGIN(S) -->
<script src="~/js/plugin/datatables/jquery.dataTables.min.js"></script>
<script src="~/js/plugin/datatables/dataTables.colVis.min.js"></script>
<script src="~/js/plugin/datatables/dataTables.tableTools.min.js"></script>
<script src="~/js/plugin/datatables/dataTables.bootstrap.min.js"></script>
<script src="~/js/plugin/datatable-responsive/datatables.responsive.min.js"></script>

<!-- 2ND GEN  DATATABLES-->
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.2.1/js/dataTables.buttons.min.js">
</script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.2.1/js/buttons.flash.min.js">
</script>
<script type="text/javascript" language="javascript" src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js">
</script>
<script type="text/javascript" language="javascript" src="//cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js">
</script>
<script type="text/javascript" language="javascript" src="//cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js">
</script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.2.1/js/buttons.html5.min.js">
</script>
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/buttons/1.2.1/js/buttons.print.min.js"></script>
<!--END 2ND GEN -->
<!-- External Plugins-->
<script src="~/Scripts/chosen.jquery.min.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>

<!--End of External Plugins-->
<style type="text/css">
    /*This is the style that will control loading animation */
    #divLoading {
        display: none;
    }

        #divLoading.show {
            display: block;
            position: fixed;
            z-index: 100;
            background-image: url('../../../../Content/images/loaders/ajax-blocky-loader.gif');
            background-color: green;
            opacity: 0.3;
            background-repeat: no-repeat;
            background-position: center;
            left: 0;
            bottom: 0;
            right: 0;
            top: 0;
        }

    #loadinggif.show {
        left: 50%;
        top: 50%;
        position: absolute;
        z-index: 101;
        width: 32px;
        height: 32px;
        margin-left: -16px;
        margin-top: -16px;
    }

    .loading-message {
        left: 25%;
        top: 20%;
        position: absolute;
        z-index: 101;
        width: 500px;
        height: 32px;
        margin-left: -16px;
        margin-top: -16px;
        color: red;
        font-size: 18px;
        display: none;
    }
</style>


<script type="text/javascript">

    // DO NOT REMOVE : GLOBAL FUNCTIONS!
    function JsonToJavaScriptDate(value) {
        if (value == null)
            return "  /  /    ";

        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));

        return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
    }
    function JsonToJavaScriptDateMonth(value) {
        if (value == null)
            return "  /  /    ";

        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));

        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
    }

    function JsonToJavaScriptDateWithTime(value) {
        if (value == null)
            return "  /  /    ";

        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));

        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear() + " " +
            dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
    }
    function JsonToJavaScriptDateWithTime_Grid(value) {
        if (value == null)
            return "  /  /    ";

        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));
        var pad = "00"
        var minutes = dt.getMinutes().toString().trim();
        minutes = pad.substring(0, pad.length - minutes.length) + minutes;
        var seconds = dt.getSeconds().toString().trim();
        seconds = pad.substring(0, pad.length - seconds.length) + seconds;
        var months = (dt.getMonth() + 1).toString().trim();;
        months = pad.substring(0, pad.length - months.length) + months;
        var days = dt.getDate().toString().trim();;
        days = pad.substring(0, pad.length - days.length) + days;
        var hours = dt.getHours().toString().trim();;
        hours = pad.substring(0, pad.length - hours.length) + hours;

        return (dt.getFullYear() + "/" + months + "/" + days + " " + hours + ":" + minutes + ":" + seconds);
    }

    function numberWithCommas(x) {
        try {
            x = x || 0;
            if (typeof (x) == "string") {
                //console.log("string", x);
                x = parseFloat(x.replace(/,/g, ''));
                return x.numberFormat(2);
            }
            if (typeof (x) == "number") {
                //console.log("number",x);
                return x.numberFormat(2);
            }
        } catch (e) {
            console.log("Failed numberWithCommas", x);
            return 0;
        }

    }

    Number.prototype.numberFormat = function (decimals, dec_point, thousands_sep) {
        dec_point = typeof dec_point !== 'undefined' ? dec_point : '.';
        thousands_sep = typeof thousands_sep !== 'undefined' ? thousands_sep : ',';


        var parts = this.toFixed(decimals).split('.');
        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, thousands_sep);

        return parts.join(dec_point);
    }


    function numberWithoutCommas(str) {
        if (!isStringEmpty(str)) {
            while (str.search(",") >= 0) {
                str = (str + "").replace(',', '');
            }
        }
        else { str = "0"; }
        return str;
        //return x.replace(/,/g, '');
    }

    function isStringEmpty(value) {
        return typeof value == 'string' && !value.trim() || typeof value == 'undefined' || value === null;
    }

    $(document).ready(function () {

        pageSetUp();
        drawBreadCrumb();


        /* BASIC ;*/
        var responsiveHelper_dt_basic = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;

        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        $('#dt_basic').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "oLanguage": {
                "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
            },
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_basic) {
                    responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_dt_basic.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_dt_basic.respond();
            }
        });

        /* END BASIC */

        /* COLUMN FILTER  */
        var otable = $('#datatable_fixed_column').DataTable({
            //"bFilter": false,
            //"bInfo": false,
            //"bLengthChange": false
            //"bAutoWidth": false,
            //"bPaginate": false,
            //"bStateSave": true // saves sort state using localStorage
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
            "autoWidth": true,
            "oLanguage": {
                "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
            },
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_fixed_column) {
                    responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_fixed_column.respond();
            }

        });

        // custom toolbar
        $("div.toolbarx").html(
            '<div class="text-right"><img src="~/img/logo.png" alt="Esoft Financials" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>'
            );

        // Apply the filter
        $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });
        /* END COLUMN FILTER */

        /* COLUMN SHOW - HIDE */
        $('#datatable_col_reorder').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "autoWidth": true,
            "oLanguage": {
                "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
            },
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_col_reorder) {
                    responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_col_reorder.respond();
            }
        });

        /* END COLUMN SHOW - HIDE */



        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oLanguage": {
                "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
            },
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "EsoftFinancials_PDF",
                       "sPdfMessage": "Esoft Financials PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by Esoft Financials <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

        /* END TABLETOOLS */



    })

(function ($) {

    $.fn.clearForm = function (options) {

        // This is the easiest way to have default options.
        var settings = $.extend({
            // These are the defaults.

            formId: this.closest('form')

        }, options);

        var $form = $(settings.formId);



        //reset jQuery Validate's internals
        $form.validate().resetForm();

        //reset unobtrusive validation summary, if it exists
        $form.find("[data-valmsg-summary=true]")
            .removeClass("validation-summary-errors")
            .addClass("validation-summary-valid")
            .find("ul").empty();

        //reset unobtrusive field level, if it exists
        $form.find("[data-valmsg-replace]")
            .removeClass("field-validation-error")
            .addClass("field-validation-valid")
            .empty();

        return $form;
    };

}(jQuery));
    function clearModalErrorsOnShow(modalName) {
        if ($("#" + modalName) != undefined) {
            $('#' + modalName + '').find("[data-valmsg-replace]")
          .removeClass("field-validation-error")
          .addClass("field-validation-valid")
          .empty();
        }
    }

    function ajaxShowModelErrors(formId, ajaxResponse, modalName) {
        if ($("#" + formId) != undefined) {
            $("#" + formId).clearForm("params...");
            if (isStringEmpty(modalName)) {
                clearModalErrorsOnShow(modalName);
            }
            fieldErrors = ajaxResponse.FieldsWithErrors;
            if (fieldErrors != undefined) {
                for (var i = 0; i < fieldErrors.length; i++) {
                    for (var j = 0; j < fieldErrors[i].Errors.length; j++) {
                        if (isStringEmpty(modalName)) {
                            $('#' + formId + ' [data-valmsg-for="' + fieldErrors[i].Key + '"]').text(fieldErrors[i].Errors[j]);
                        }
                        else {
                            $('#' + modalName + ' [data-valmsg-for="' + fieldErrors[i].Key + '"]').text(fieldErrors[i].Errors[j]);
                        }
                    }
                }
            }
        }
    }

    function ajaxExtractModelErrors(ajaxResponse) {
        var errorMessage = "";
        var count = 1;
        var recordsWithErrorArray = ajaxResponse.FieldsWithErrors;
        for (var j = 0; j < recordsWithErrorArray.length; j++) {
            errorMessage += count++ + ". " + recordsWithErrorArray[j].Errors + "<br>";
        }
        return errorMessage;
    }

    function toastrShowModelErrors(fieldErrors) {
        if (fieldErrors != undefined) {
            var errorMessage = "";
            var errorCount = 1;
            for (var i = 0; i < fieldErrors.length; i++) {
                for (var j = 0; j < fieldErrors[i].Errors.length; j++) {
                    errorMessage += (errorCount + i) + ". " + fieldErrors[i].Errors[j] + "</br>";
                }
            }
            toastr.error(errorMessage, "Errors");
        }
    }

    function preSelectDropDownList(selector, checkAgaints, neddle) {
        //console.log(selector, checkAgaints, neddle);//DEBUG
        let hayStack = "";
        neddle = neddle == null ? "" : neddle;
        $(selector + " option").filter(function () {
            if (checkAgaints === "text") {
                hayStack = $(this).text();
            } else if (checkAgaints === "val") {
                hayStack = $(this).val();
            } else {
                alert("Error on Param 2.Only text or value allowed -->" + checkAgaints);
            }
            var result = hayStack.includes(neddle);
            //console.log(neddle+" vs "+hayStack+" = "+result);//DEBUG
            // console.log("Selected return", result);//DEBUG
            return result;
        }).prop('selected', true);
    }

    function convert_time(c_sharp_date) {
        let regex = /-?\d+/;
        if (c_sharp_date === null || c_sharp_date === "undefined" || c_sharp_date.length < 0) {
            return "N/A";
        } else {
            var millsecArray = regex.exec(c_sharp_date);
            var js_date_time = new Date(parseInt(millsecArray[0]));
            return js_date_time;
        }
    }

    function initTable(selector) {
        var table = "";
        if ($.fn.dataTable.isDataTable(selector)) {
            table = $(selector).DataTable();
        } else {
            table = $(selector).DataTable({
                "dom": 't',
                paging: false,
                searching: false
            });
        }

        return table;
    }

    function hideModal(modalId) {
        /*
        * Call this when hidding a modal where there are two modals in a page
        */
        $(modalId).modal('hide');
    }


    //populateDropDown($("#SubCategoryCode"), result.stockSubCategorySingleRecordList, "Select Stock Sub Category");
    function populateDropDown(dropdownid, selectlistItems, defaultValue) {
        dropdownid.empty();
        dropdownid.append($('<option></option>').val("").html(defaultValue)).trigger('chosen:updated');
        $.each(selectlistItems, function (key, Vals) {
            dropdownid.append($('<option></option>').val(Vals.Value).html(Vals.Text)).trigger('chosen:updated');
        });
        //Example
        //populateDropDown($("#SubCategoryCode"), result.stockSubCategorySingleRecordList, "Select Stock Sub Category");

    }

    function showLongThreadDiv() {
        $("div#divLoading").addClass('show');
        $("div.loading-message").show();
    }

    function hideLongThreadDiv() {
        $("div#divLoading").removeClass('show');
        $("div.loading-message").hide();
    }
</script>
